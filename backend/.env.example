# =============================================================================
# AGENTIC BLOG SUPPORT SYSTEM - ENVIRONMENT CONFIGURATION
# =============================================================================

# API Configuration
API_HOST=0.0.0.0
API_PORT=8000
API_RELOAD=true
API_WORKERS=1

# Authentication
API_KEY=your-secret-api-key
JWT_SECRET=your-jwt-secret
JWT_EXPIRES_HOURS=24

# LLM Service Configuration (Choose one)

GEMINI_API_KEY=your-gemini-api-key-here
LLM_PROVIDER=gemini
LLM_MODEL=gemini-pro
LLM_MAX_TOKENS=1024
LLM_TEMPERATURE=0.1



# Langraph Configuration
LANGRAPH_CHECKPOINT_TYPE=memory
LANGRAPH_MAX_ITERATIONS=3
LANGRAPH_TIMEOUT=30

# Scoring System Configuration
SCORING_WEIGHTS_KEYWORD_RELEVANCE=0.25
SCORING_WEIGHTS_READABILITY=0.20
SCORING_WEIGHTS_USER_ALIGNMENT=0.15
SCORING_WEIGHTS_STRUCTURE=0.15
SCORING_WEIGHTS_SEO=0.15
SCORING_WEIGHTS_ENGAGEMENT=0.10

# Retry Configuration
RETRY_MAX_ATTEMPTS=3
RETRY_BASE_DELAY=1.0
RETRY_MAX_DELAY=60.0
RETRY_EXPONENTIAL_BASE=2.0
RETRY_JITTER=true

# Circuit Breaker Configuration
CIRCUIT_BREAKER_FAILURE_THRESHOLD=5
CIRCUIT_BREAKER_TIMEOUT=60.0

# Agent Configuration
AGENT_SESSION_TIMEOUT=3600  # 1 hour in seconds
AGENT_MAX_SESSIONS=100
AGENT_ANALYSIS_CACHE_SIZE=1000
AGENT_HISTORICAL_PATTERNS_SIZE=100

# Content Analysis Configuration
CONTENT_MIN_LENGTH=10
CONTENT_MAX_LENGTH=50000
KEYWORD_MAX_SUGGESTIONS=10
CONTEXT_WINDOW_SIZE=100

# Caching (Optional - Redis)
# REDIS_URL=redis://localhost:6379/0
# CACHE_TTL=3600  # 1 hour
# CACHE_ENABLED=true

# Database (Optional - for production)
# DATABASE_URL=postgresql+asyncpg://user:password@localhost/blogagent
# DB_POOL_SIZE=5
# DB_MAX_OVERFLOW=10

# Logging Configuration
LOG_LEVEL=INFO
LOG_FORMAT=json
LOG_FILE=logs/blog_agent.log

# Monitoring and Metrics
ENABLE_METRICS=true
METRICS_PORT=9090
HEALTH_CHECK_INTERVAL=30

# CORS Configuration
CORS_ORIGINS=["http://localhost:3000", "http://localhost:3001", "http://127.0.0.1:3000"]
CORS_ALLOW_CREDENTIALS=true
CORS_ALLOW_METHODS=["GET", "POST", "PUT", "DELETE", "OPTIONS"]
CORS_ALLOW_HEADERS=["*"]

# Rate Limiting (Optional)
# RATE_LIMIT_REQUESTS=100
# RATE_LIMIT_WINDOW=60  # seconds

# Development/Production Settings
ENVIRONMENT=development  # development, staging, production
DEBUG=true
TESTING=false

# Token Usage Tracking
TRACK_TOKEN_USAGE=true
TOKEN_COST_PER_1K_INPUT=0.0005
TOKEN_COST_PER_1K_OUTPUT=0.0015

# Content Safety (Optional)
ENABLE_CONTENT_FILTERING=false
MAX_CONTENT_SAFETY_SCORE=0.8

# Webhook Configuration (Optional)
# WEBHOOK_URL=https://your-webhook-endpoint.com/notifications
# WEBHOOK_SECRET=your-webhook-secret

# Backup and Recovery (Optional)
# BACKUP_ENABLED=false
# BACKUP_INTERVAL=86400  # 24 hours in seconds
# BACKUP_RETENTION_DAYS=30

# Performance Tuning
ASYNC_WORKER_COUNT=4
MAX_CONCURRENT_REQUESTS=50
REQUEST_TIMEOUT=30

# Feature Flags
ENABLE_REAL_TIME_SUGGESTIONS=true
ENABLE_HISTORICAL_LEARNING=true
ENABLE_USER_PROFILE_ADAPTATION=true
ENABLE_SEO_OPTIMIZATION=true
ENABLE_ENGAGEMENT_ANALYSIS=true

# =============================================================================
# DEPLOYMENT NOTES:
# 
# 1. Copy this file to .env and update all placeholder values
# 2. Generate strong, unique values for API_KEY and JWT_SECRET
# 3. Get API key from your chosen LLM provider (Gemini recommended)
# 4. Adjust CORS_ORIGINS for your frontend domain
# 5. Set ENVIRONMENT=production for production deployment
# 6. Consider using external Redis for caching in production
# 7. Use PostgreSQL database for production workloads
# 8. Enable monitoring and logging for production systems
# =============================================================================